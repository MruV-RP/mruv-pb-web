/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_firestore_admin_v1_index_pb = require('../../../../google/firestore/admin/v1/index_pb.js');
goog.object.extend(proto, google_firestore_admin_v1_index_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
goog.exportSymbol('proto.google.firestore.admin.v1.ExportDocumentsMetadata', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.ExportDocumentsResponse', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.FieldOperationMetadata', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.ImportDocumentsMetadata', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.IndexOperationMetadata', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.OperationState', null, global);
goog.exportSymbol('proto.google.firestore.admin.v1.Progress', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.IndexOperationMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.admin.v1.IndexOperationMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.IndexOperationMetadata.displayName = 'proto.google.firestore.admin.v1.IndexOperationMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.FieldOperationMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.admin.v1.FieldOperationMetadata.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.admin.v1.FieldOperationMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.FieldOperationMetadata.displayName = 'proto.google.firestore.admin.v1.FieldOperationMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.displayName = 'proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.admin.v1.ExportDocumentsMetadata.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.admin.v1.ExportDocumentsMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.ExportDocumentsMetadata.displayName = 'proto.google.firestore.admin.v1.ExportDocumentsMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.firestore.admin.v1.ImportDocumentsMetadata.repeatedFields_, null);
};
goog.inherits(proto.google.firestore.admin.v1.ImportDocumentsMetadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.ImportDocumentsMetadata.displayName = 'proto.google.firestore.admin.v1.ImportDocumentsMetadata';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.admin.v1.ExportDocumentsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.ExportDocumentsResponse.displayName = 'proto.google.firestore.admin.v1.ExportDocumentsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.firestore.admin.v1.Progress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.firestore.admin.v1.Progress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.firestore.admin.v1.Progress.displayName = 'proto.google.firestore.admin.v1.Progress';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.IndexOperationMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.IndexOperationMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    index: jspb.Message.getFieldWithDefault(msg, 3, ""),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    progressDocuments: (f = msg.getProgressDocuments()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f),
    progressBytes: (f = msg.getProgressBytes()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.IndexOperationMetadata}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.IndexOperationMetadata;
  return proto.google.firestore.admin.v1.IndexOperationMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.IndexOperationMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.IndexOperationMetadata}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIndex(value);
      break;
    case 4:
      var value = /** @type {!proto.google.firestore.admin.v1.OperationState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressDocuments(value);
      break;
    case 6:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.IndexOperationMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.IndexOperationMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getIndex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getProgressDocuments();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
  f = message.getProgressBytes();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string index = 3;
 * @return {string}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.getIndex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.setIndex = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional OperationState state = 4;
 * @return {!proto.google.firestore.admin.v1.OperationState}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.getState = function() {
  return /** @type {!proto.google.firestore.admin.v1.OperationState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.google.firestore.admin.v1.OperationState} value */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Progress progress_documents = 5;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.getProgressDocuments = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 5));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.setProgressDocuments = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.clearProgressDocuments = function() {
  this.setProgressDocuments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.hasProgressDocuments = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Progress progress_bytes = 6;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.getProgressBytes = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 6));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.setProgressBytes = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.clearProgressBytes = function() {
  this.setProgressBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.IndexOperationMetadata.prototype.hasProgressBytes = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.FieldOperationMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    field: jspb.Message.getFieldWithDefault(msg, 3, ""),
    indexConfigDeltasList: jspb.Message.toObjectList(msg.getIndexConfigDeltasList(),
    proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.toObject, includeInstance),
    state: jspb.Message.getFieldWithDefault(msg, 5, 0),
    progressDocuments: (f = msg.getProgressDocuments()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f),
    progressBytes: (f = msg.getProgressBytes()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.FieldOperationMetadata}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.FieldOperationMetadata;
  return proto.google.firestore.admin.v1.FieldOperationMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.FieldOperationMetadata}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 4:
      var value = new proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta;
      reader.readMessage(value,proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.deserializeBinaryFromReader);
      msg.addIndexConfigDeltas(value);
      break;
    case 5:
      var value = /** @type {!proto.google.firestore.admin.v1.OperationState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 6:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressDocuments(value);
      break;
    case 7:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.FieldOperationMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIndexConfigDeltasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getProgressDocuments();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
  f = message.getProgressBytes();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.toObject = function(includeInstance, msg) {
  var f, obj = {
    changeType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    index: (f = msg.getIndex()) && google_firestore_admin_v1_index_pb.Index.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta;
  return proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType} */ (reader.readEnum());
      msg.setChangeType(value);
      break;
    case 2:
      var value = new google_firestore_admin_v1_index_pb.Index;
      reader.readMessage(value,google_firestore_admin_v1_index_pb.Index.deserializeBinaryFromReader);
      msg.setIndex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getChangeType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIndex();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_firestore_admin_v1_index_pb.Index.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType = {
  CHANGE_TYPE_UNSPECIFIED: 0,
  ADD: 1,
  REMOVE: 2
};

/**
 * optional ChangeType change_type = 1;
 * @return {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.getChangeType = function() {
  return /** @type {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.ChangeType} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.setChangeType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Index index = 2;
 * @return {?proto.google.firestore.admin.v1.Index}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.getIndex = function() {
  return /** @type{?proto.google.firestore.admin.v1.Index} */ (
    jspb.Message.getWrapperField(this, google_firestore_admin_v1_index_pb.Index, 2));
};


/** @param {?proto.google.firestore.admin.v1.Index|undefined} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.setIndex = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.clearIndex = function() {
  this.setIndex(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta.prototype.hasIndex = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string field = 3;
 * @return {string}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setField = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated IndexConfigDelta index_config_deltas = 4;
 * @return {!Array<!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta>}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getIndexConfigDeltasList = function() {
  return /** @type{!Array<!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta, 4));
};


/** @param {!Array<!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta>} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setIndexConfigDeltasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.addIndexConfigDeltas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.firestore.admin.v1.FieldOperationMetadata.IndexConfigDelta, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.clearIndexConfigDeltasList = function() {
  this.setIndexConfigDeltasList([]);
};


/**
 * optional OperationState state = 5;
 * @return {!proto.google.firestore.admin.v1.OperationState}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getState = function() {
  return /** @type {!proto.google.firestore.admin.v1.OperationState} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {!proto.google.firestore.admin.v1.OperationState} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional Progress progress_documents = 6;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getProgressDocuments = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 6));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setProgressDocuments = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.clearProgressDocuments = function() {
  this.setProgressDocuments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.hasProgressDocuments = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional Progress progress_bytes = 7;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.getProgressBytes = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 7));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.setProgressBytes = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.clearProgressBytes = function() {
  this.setProgressBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.FieldOperationMetadata.prototype.hasProgressBytes = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.ExportDocumentsMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.ExportDocumentsMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    operationState: jspb.Message.getFieldWithDefault(msg, 3, 0),
    progressDocuments: (f = msg.getProgressDocuments()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f),
    progressBytes: (f = msg.getProgressBytes()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f),
    collectionIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    outputUriPrefix: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.ExportDocumentsMetadata}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.ExportDocumentsMetadata;
  return proto.google.firestore.admin.v1.ExportDocumentsMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.ExportDocumentsMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.ExportDocumentsMetadata}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {!proto.google.firestore.admin.v1.OperationState} */ (reader.readEnum());
      msg.setOperationState(value);
      break;
    case 4:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressDocuments(value);
      break;
    case 5:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressBytes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addCollectionIds(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUriPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.ExportDocumentsMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.ExportDocumentsMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOperationState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getProgressDocuments();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
  f = message.getProgressBytes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
  f = message.getCollectionIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getOutputUriPrefix();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OperationState operation_state = 3;
 * @return {!proto.google.firestore.admin.v1.OperationState}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getOperationState = function() {
  return /** @type {!proto.google.firestore.admin.v1.OperationState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.google.firestore.admin.v1.OperationState} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setOperationState = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Progress progress_documents = 4;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getProgressDocuments = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 4));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setProgressDocuments = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.clearProgressDocuments = function() {
  this.setProgressDocuments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.hasProgressDocuments = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Progress progress_bytes = 5;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getProgressBytes = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 5));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setProgressBytes = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.clearProgressBytes = function() {
  this.setProgressBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.hasProgressBytes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string collection_ids = 6;
 * @return {!Array<string>}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getCollectionIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setCollectionIdsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.addCollectionIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.clearCollectionIdsList = function() {
  this.setCollectionIdsList([]);
};


/**
 * optional string output_uri_prefix = 7;
 * @return {string}
 */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.getOutputUriPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.google.firestore.admin.v1.ExportDocumentsMetadata.prototype.setOutputUriPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.ImportDocumentsMetadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.ImportDocumentsMetadata} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    startTime: (f = msg.getStartTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    endTime: (f = msg.getEndTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    operationState: jspb.Message.getFieldWithDefault(msg, 3, 0),
    progressDocuments: (f = msg.getProgressDocuments()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f),
    progressBytes: (f = msg.getProgressBytes()) && proto.google.firestore.admin.v1.Progress.toObject(includeInstance, f),
    collectionIdsList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    inputUriPrefix: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.ImportDocumentsMetadata}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.ImportDocumentsMetadata;
  return proto.google.firestore.admin.v1.ImportDocumentsMetadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.ImportDocumentsMetadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.ImportDocumentsMetadata}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setStartTime(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setEndTime(value);
      break;
    case 3:
      var value = /** @type {!proto.google.firestore.admin.v1.OperationState} */ (reader.readEnum());
      msg.setOperationState(value);
      break;
    case 4:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressDocuments(value);
      break;
    case 5:
      var value = new proto.google.firestore.admin.v1.Progress;
      reader.readMessage(value,proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader);
      msg.setProgressBytes(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addCollectionIds(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setInputUriPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.ImportDocumentsMetadata.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.ImportDocumentsMetadata} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStartTime();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getEndTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getOperationState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getProgressDocuments();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
  f = message.getProgressBytes();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter
    );
  }
  f = message.getCollectionIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getInputUriPrefix();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional google.protobuf.Timestamp start_time = 1;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getStartTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 1));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setStartTime = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.clearStartTime = function() {
  this.setStartTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.hasStartTime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional google.protobuf.Timestamp end_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getEndTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setEndTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.clearEndTime = function() {
  this.setEndTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.hasEndTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional OperationState operation_state = 3;
 * @return {!proto.google.firestore.admin.v1.OperationState}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getOperationState = function() {
  return /** @type {!proto.google.firestore.admin.v1.OperationState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.google.firestore.admin.v1.OperationState} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setOperationState = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Progress progress_documents = 4;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getProgressDocuments = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 4));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setProgressDocuments = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.clearProgressDocuments = function() {
  this.setProgressDocuments(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.hasProgressDocuments = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Progress progress_bytes = 5;
 * @return {?proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getProgressBytes = function() {
  return /** @type{?proto.google.firestore.admin.v1.Progress} */ (
    jspb.Message.getWrapperField(this, proto.google.firestore.admin.v1.Progress, 5));
};


/** @param {?proto.google.firestore.admin.v1.Progress|undefined} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setProgressBytes = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.clearProgressBytes = function() {
  this.setProgressBytes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.hasProgressBytes = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * repeated string collection_ids = 6;
 * @return {!Array<string>}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getCollectionIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/** @param {!Array<string>} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setCollectionIdsList = function(value) {
  jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.addCollectionIds = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.clearCollectionIdsList = function() {
  this.setCollectionIdsList([]);
};


/**
 * optional string input_uri_prefix = 7;
 * @return {string}
 */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.getInputUriPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.google.firestore.admin.v1.ImportDocumentsMetadata.prototype.setInputUriPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.ExportDocumentsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.ExportDocumentsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    outputUriPrefix: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.ExportDocumentsResponse}
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.ExportDocumentsResponse;
  return proto.google.firestore.admin.v1.ExportDocumentsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.ExportDocumentsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.ExportDocumentsResponse}
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOutputUriPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.ExportDocumentsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.ExportDocumentsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOutputUriPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string output_uri_prefix = 1;
 * @return {string}
 */
proto.google.firestore.admin.v1.ExportDocumentsResponse.prototype.getOutputUriPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.firestore.admin.v1.ExportDocumentsResponse.prototype.setOutputUriPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.firestore.admin.v1.Progress.prototype.toObject = function(opt_includeInstance) {
  return proto.google.firestore.admin.v1.Progress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.firestore.admin.v1.Progress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.Progress.toObject = function(includeInstance, msg) {
  var f, obj = {
    estimatedWork: jspb.Message.getFieldWithDefault(msg, 1, 0),
    completedWork: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.Progress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.firestore.admin.v1.Progress;
  return proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.firestore.admin.v1.Progress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.firestore.admin.v1.Progress}
 */
proto.google.firestore.admin.v1.Progress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEstimatedWork(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompletedWork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.firestore.admin.v1.Progress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.firestore.admin.v1.Progress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.firestore.admin.v1.Progress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEstimatedWork();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getCompletedWork();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
};


/**
 * optional int64 estimated_work = 1;
 * @return {number}
 */
proto.google.firestore.admin.v1.Progress.prototype.getEstimatedWork = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.google.firestore.admin.v1.Progress.prototype.setEstimatedWork = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 completed_work = 2;
 * @return {number}
 */
proto.google.firestore.admin.v1.Progress.prototype.getCompletedWork = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.google.firestore.admin.v1.Progress.prototype.setCompletedWork = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * @enum {number}
 */
proto.google.firestore.admin.v1.OperationState = {
  OPERATION_STATE_UNSPECIFIED: 0,
  INITIALIZING: 1,
  PROCESSING: 2,
  CANCELLING: 3,
  FINALIZING: 4,
  SUCCESSFUL: 5,
  FAILED: 6,
  CANCELLED: 7
};

goog.object.extend(exports, proto.google.firestore.admin.v1);
