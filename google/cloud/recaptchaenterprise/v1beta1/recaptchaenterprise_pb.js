/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_client_pb = require('../../../../google/api/client_pb.js');
goog.object.extend(proto, google_api_client_pb);
var google_api_field_behavior_pb = require('../../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_api_resource_pb = require('../../../../google/api/resource_pb.js');
goog.object.extend(proto, google_api_resource_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.Assessment', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.Event', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties', null, global);
goog.exportSymbol('proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.displayName = 'proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.displayName = 'proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.displayName = 'proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.recaptchaenterprise.v1beta1.Assessment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.displayName = 'proto.google.cloud.recaptchaenterprise.v1beta1.Assessment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.recaptchaenterprise.v1beta1.Event, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.recaptchaenterprise.v1beta1.Event.displayName = 'proto.google.cloud.recaptchaenterprise.v1beta1.Event';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.displayName = 'proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    assessment: (f = msg.getAssessment()) && proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest;
  return proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.google.cloud.recaptchaenterprise.v1beta1.Assessment;
      reader.readMessage(value,proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.deserializeBinaryFromReader);
      msg.setAssessment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAssessment();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.serializeBinaryToWriter
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.setParent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Assessment assessment = 2;
 * @return {?proto.google.cloud.recaptchaenterprise.v1beta1.Assessment}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.getAssessment = function() {
  return /** @type{?proto.google.cloud.recaptchaenterprise.v1beta1.Assessment} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.recaptchaenterprise.v1beta1.Assessment, 2));
};


/** @param {?proto.google.cloud.recaptchaenterprise.v1beta1.Assessment|undefined} value */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.setAssessment = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.clearAssessment = function() {
  this.setAssessment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.CreateAssessmentRequest.prototype.hasAssessment = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    annotation: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest;
  return proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation} */ (reader.readEnum());
      msg.setAnnotation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAnnotation();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation = {
  ANNOTATION_UNSPECIFIED: 0,
  LEGITIMATE: 1,
  FRAUDULENT: 2
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Annotation annotation = 2;
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.prototype.getAnnotation = function() {
  return /** @type {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.Annotation} value */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentRequest.prototype.setAnnotation = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse;
  return proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.AnnotateAssessmentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    event: (f = msg.getEvent()) && proto.google.cloud.recaptchaenterprise.v1beta1.Event.toObject(includeInstance, f),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 3, 0.0),
    tokenProperties: (f = msg.getTokenProperties()) && proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.toObject(includeInstance, f),
    reasonsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.recaptchaenterprise.v1beta1.Assessment;
  return proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = new proto.google.cloud.recaptchaenterprise.v1beta1.Event;
      reader.readMessage(value,proto.google.cloud.recaptchaenterprise.v1beta1.Event.deserializeBinaryFromReader);
      msg.setEvent(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 4:
      var value = new proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties;
      reader.readMessage(value,proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.deserializeBinaryFromReader);
      msg.setTokenProperties(value);
      break;
    case 5:
      var value = /** @type {!Array<!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason>} */ (reader.readPackedEnum());
      msg.setReasonsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEvent();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.recaptchaenterprise.v1beta1.Event.serializeBinaryToWriter
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = message.getTokenProperties();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.serializeBinaryToWriter
    );
  }
  f = message.getReasonsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason = {
  CLASSIFICATION_REASON_UNSPECIFIED: 0,
  AUTOMATION: 1,
  UNEXPECTED_ENVIRONMENT: 2,
  TOO_MUCH_TRAFFIC: 3,
  UNEXPECTED_USAGE_PATTERNS: 4,
  LOW_CONFIDENCE_SCORE: 5
};

/**
 * optional string name = 1;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Event event = 2;
 * @return {?proto.google.cloud.recaptchaenterprise.v1beta1.Event}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.getEvent = function() {
  return /** @type{?proto.google.cloud.recaptchaenterprise.v1beta1.Event} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.recaptchaenterprise.v1beta1.Event, 2));
};


/** @param {?proto.google.cloud.recaptchaenterprise.v1beta1.Event|undefined} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.setEvent = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.clearEvent = function() {
  this.setEvent(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.hasEvent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float score = 3;
 * @return {number}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.setScore = function(value) {
  jspb.Message.setProto3FloatField(this, 3, value);
};


/**
 * optional TokenProperties token_properties = 4;
 * @return {?proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.getTokenProperties = function() {
  return /** @type{?proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties, 4));
};


/** @param {?proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties|undefined} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.setTokenProperties = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.clearTokenProperties = function() {
  this.setTokenProperties(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.hasTokenProperties = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated ClassificationReason reasons = 5;
 * @return {!Array<!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason>}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.getReasonsList = function() {
  return /** @type {!Array<!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason>} */ (jspb.Message.getRepeatedField(this, 5));
};


/** @param {!Array<!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason>} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.setReasonsList = function(value) {
  jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.ClassificationReason} value
 * @param {number=} opt_index
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.addReasons = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Assessment.prototype.clearReasonsList = function() {
  this.setReasonsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.recaptchaenterprise.v1beta1.Event.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Event} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.toObject = function(includeInstance, msg) {
  var f, obj = {
    token: jspb.Message.getFieldWithDefault(msg, 1, ""),
    siteKey: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.Event}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.recaptchaenterprise.v1beta1.Event;
  return proto.google.cloud.recaptchaenterprise.v1beta1.Event.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Event} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.Event}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setToken(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSiteKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.recaptchaenterprise.v1beta1.Event.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.Event} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getToken();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSiteKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string token = 1;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.prototype.getToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.prototype.setToken = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string site_key = 2;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.prototype.getSiteKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.Event.prototype.setSiteKey = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.toObject = function(includeInstance, msg) {
  var f, obj = {
    valid: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    invalidReason: jspb.Message.getFieldWithDefault(msg, 2, 0),
    createTime: (f = msg.getCreateTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    hostname: jspb.Message.getFieldWithDefault(msg, 4, ""),
    action: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties;
  return proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValid(value);
      break;
    case 2:
      var value = /** @type {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason} */ (reader.readEnum());
      msg.setInvalidReason(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreateTime(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setHostname(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAction(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getValid();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getInvalidReason();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCreateTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getHostname();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAction();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason = {
  INVALID_REASON_UNSPECIFIED: 0,
  UNKNOWN_INVALID_REASON: 1,
  MALFORMED: 2,
  EXPIRED: 3,
  DUPE: 4,
  SITE_MISMATCH: 5,
  MISSING: 6
};

/**
 * optional bool valid = 1;
 * @return {boolean}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.getValid = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.setValid = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional InvalidReason invalid_reason = 2;
 * @return {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.getInvalidReason = function() {
  return /** @type {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.InvalidReason} value */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.setInvalidReason = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp create_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.getCreateTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.setCreateTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.clearCreateTime = function() {
  this.setCreateTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.hasCreateTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string hostname = 4;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.getHostname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.setHostname = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string action = 5;
 * @return {string}
 */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.getAction = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.google.cloud.recaptchaenterprise.v1beta1.TokenProperties.prototype.setAction = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.google.cloud.recaptchaenterprise.v1beta1);
