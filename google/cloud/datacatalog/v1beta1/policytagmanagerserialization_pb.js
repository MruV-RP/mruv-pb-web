/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_client_pb = require('../../../../google/api/client_pb.js');
goog.object.extend(proto, google_api_client_pb);
var google_api_field_behavior_pb = require('../../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_api_resource_pb = require('../../../../google/api/resource_pb.js');
goog.object.extend(proto, google_api_resource_pb);
var google_cloud_datacatalog_v1beta1_policytagmanager_pb = require('../../../../google/cloud/datacatalog/v1beta1/policytagmanager_pb.js');
goog.object.extend(proto, google_cloud_datacatalog_v1beta1_policytagmanager_pb);
var google_iam_v1_policy_pb = require('../../../../google/iam/v1/policy_pb.js');
goog.object.extend(proto, google_iam_v1_policy_pb);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.InlineSource', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.displayName = 'proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.displayName = 'proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.oneofGroups_);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.displayName = 'proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.datacatalog.v1beta1.InlineSource.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.InlineSource, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.InlineSource.displayName = 'proto.google.cloud.datacatalog.v1beta1.InlineSource';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.displayName = 'proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.repeatedFields_, proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.oneofGroups_);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.displayName = 'proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.displayName = 'proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    policyTagsList: jspb.Message.toObjectList(msg.getPolicyTagsList(),
    proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy;
  return proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.deserializeBinaryFromReader);
      msg.addPolicyTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPolicyTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.serializeBinaryToWriter
    );
  }
};


/**
 * optional string display_name = 1;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated SerializedPolicyTag policy_tags = 3;
 * @return {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag>}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.getPolicyTagsList = function() {
  return /** @type{!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag, 3));
};


/** @param {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag>} value */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.setPolicyTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.addPolicyTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.prototype.clearPolicyTagsList = function() {
  this.setPolicyTagsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    childPolicyTagsList: jspb.Message.toObjectList(msg.getChildPolicyTagsList(),
    proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag;
  return proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = new proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.deserializeBinaryFromReader);
      msg.addChildPolicyTags(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getChildPolicyTagsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.serializeBinaryToWriter
    );
  }
};


/**
 * optional string display_name = 2;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated SerializedPolicyTag child_policy_tags = 4;
 * @return {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag>}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.getChildPolicyTagsList = function() {
  return /** @type{!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag, 4));
};


/** @param {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag>} value */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.setChildPolicyTagsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag}
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.addChildPolicyTags = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.datacatalog.v1beta1.SerializedPolicyTag.prototype.clearChildPolicyTagsList = function() {
  this.setChildPolicyTagsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.oneofGroups_ = [[2]];

/**
 * @enum {number}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.SourceCase = {
  SOURCE_NOT_SET: 0,
  INLINE_SOURCE: 2
};

/**
 * @return {proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.SourceCase}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.getSourceCase = function() {
  return /** @type {proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.SourceCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    inlineSource: (f = msg.getInlineSource()) && proto.google.cloud.datacatalog.v1beta1.InlineSource.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest;
  return proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = new proto.google.cloud.datacatalog.v1beta1.InlineSource;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.InlineSource.deserializeBinaryFromReader);
      msg.setInlineSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getInlineSource();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.datacatalog.v1beta1.InlineSource.serializeBinaryToWriter
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.setParent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional InlineSource inline_source = 2;
 * @return {?proto.google.cloud.datacatalog.v1beta1.InlineSource}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.getInlineSource = function() {
  return /** @type{?proto.google.cloud.datacatalog.v1beta1.InlineSource} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.datacatalog.v1beta1.InlineSource, 2));
};


/** @param {?proto.google.cloud.datacatalog.v1beta1.InlineSource|undefined} value */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.setInlineSource = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.clearInlineSource = function() {
  this.setInlineSource(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesRequest.prototype.hasInlineSource = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.InlineSource.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.InlineSource} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.toObject = function(includeInstance, msg) {
  var f, obj = {
    taxonomiesList: jspb.Message.toObjectList(msg.getTaxonomiesList(),
    proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.InlineSource}
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.InlineSource;
  return proto.google.cloud.datacatalog.v1beta1.InlineSource.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.InlineSource} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.InlineSource}
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.deserializeBinaryFromReader);
      msg.addTaxonomies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.InlineSource.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.InlineSource} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaxonomiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SerializedTaxonomy taxonomies = 1;
 * @return {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy>}
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.prototype.getTaxonomiesList = function() {
  return /** @type{!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy, 1));
};


/** @param {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy>} value */
proto.google.cloud.datacatalog.v1beta1.InlineSource.prototype.setTaxonomiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy}
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.prototype.addTaxonomies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.datacatalog.v1beta1.InlineSource.prototype.clearTaxonomiesList = function() {
  this.setTaxonomiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taxonomiesList: jspb.Message.toObjectList(msg.getTaxonomiesList(),
    google_cloud_datacatalog_v1beta1_policytagmanager_pb.Taxonomy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse;
  return proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new google_cloud_datacatalog_v1beta1_policytagmanager_pb.Taxonomy;
      reader.readMessage(value,google_cloud_datacatalog_v1beta1_policytagmanager_pb.Taxonomy.deserializeBinaryFromReader);
      msg.addTaxonomies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaxonomiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      google_cloud_datacatalog_v1beta1_policytagmanager_pb.Taxonomy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Taxonomy taxonomies = 1;
 * @return {!Array<!proto.google.cloud.datacatalog.v1beta1.Taxonomy>}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.prototype.getTaxonomiesList = function() {
  return /** @type{!Array<!proto.google.cloud.datacatalog.v1beta1.Taxonomy>} */ (
    jspb.Message.getRepeatedWrapperField(this, google_cloud_datacatalog_v1beta1_policytagmanager_pb.Taxonomy, 1));
};


/** @param {!Array<!proto.google.cloud.datacatalog.v1beta1.Taxonomy>} value */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.prototype.setTaxonomiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.datacatalog.v1beta1.Taxonomy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.datacatalog.v1beta1.Taxonomy}
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.prototype.addTaxonomies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.datacatalog.v1beta1.Taxonomy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.datacatalog.v1beta1.ImportTaxonomiesResponse.prototype.clearTaxonomiesList = function() {
  this.setTaxonomiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.repeatedFields_ = [2];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.oneofGroups_ = [[3]];

/**
 * @enum {number}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.DestinationCase = {
  DESTINATION_NOT_SET: 0,
  SERIALIZED_TAXONOMIES: 3
};

/**
 * @return {proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.DestinationCase}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.getDestinationCase = function() {
  return /** @type {proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.DestinationCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    taxonomiesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    serializedTaxonomies: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest;
  return proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addTaxonomies(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSerializedTaxonomies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getParent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTaxonomiesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string parent = 1;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.getParent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.setParent = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string taxonomies = 2;
 * @return {!Array<string>}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.getTaxonomiesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.setTaxonomiesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.addTaxonomies = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.clearTaxonomiesList = function() {
  this.setTaxonomiesList([]);
};


/**
 * optional bool serialized_taxonomies = 3;
 * @return {boolean}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.getSerializedTaxonomies = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.setSerializedTaxonomies = function(value) {
  jspb.Message.setOneofField(this, 3, proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.clearSerializedTaxonomies = function() {
  jspb.Message.setOneofField(this, 3, proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesRequest.prototype.hasSerializedTaxonomies = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    taxonomiesList: jspb.Message.toObjectList(msg.getTaxonomiesList(),
    proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse;
  return proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.deserializeBinaryFromReader);
      msg.addTaxonomies(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTaxonomiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SerializedTaxonomy taxonomies = 1;
 * @return {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy>}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.prototype.getTaxonomiesList = function() {
  return /** @type{!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy, 1));
};


/** @param {!Array<!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy>} value */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.prototype.setTaxonomiesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy}
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.prototype.addTaxonomies = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.datacatalog.v1beta1.SerializedTaxonomy, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.datacatalog.v1beta1.ExportTaxonomiesResponse.prototype.clearTaxonomiesList = function() {
  this.setTaxonomiesList([]);
};


goog.object.extend(exports, proto.google.cloud.datacatalog.v1beta1);
