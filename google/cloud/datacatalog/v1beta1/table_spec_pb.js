/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_field_behavior_pb = require('../../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_api_resource_pb = require('../../../../google/api/resource_pb.js');
goog.object.extend(proto, google_api_resource_pb);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.TableSourceType', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.TableSpec', null, global);
goog.exportSymbol('proto.google.cloud.datacatalog.v1beta1.ViewSpec', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.oneofGroups_);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.displayName = 'proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.ViewSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.ViewSpec.displayName = 'proto.google.cloud.datacatalog.v1beta1.ViewSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.TableSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.TableSpec.displayName = 'proto.google.cloud.datacatalog.v1beta1.TableSpec';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.displayName = 'proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.TypeSpecCase = {
  TYPE_SPEC_NOT_SET: 0,
  VIEW_SPEC: 2,
  TABLE_SPEC: 3
};

/**
 * @return {proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.TypeSpecCase}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.getTypeSpecCase = function() {
  return /** @type {proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.TypeSpecCase} */(jspb.Message.computeOneofCase(this, proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    tableSourceType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    viewSpec: (f = msg.getViewSpec()) && proto.google.cloud.datacatalog.v1beta1.ViewSpec.toObject(includeInstance, f),
    tableSpec: (f = msg.getTableSpec()) && proto.google.cloud.datacatalog.v1beta1.TableSpec.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec;
  return proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.cloud.datacatalog.v1beta1.TableSourceType} */ (reader.readEnum());
      msg.setTableSourceType(value);
      break;
    case 2:
      var value = new proto.google.cloud.datacatalog.v1beta1.ViewSpec;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.ViewSpec.deserializeBinaryFromReader);
      msg.setViewSpec(value);
      break;
    case 3:
      var value = new proto.google.cloud.datacatalog.v1beta1.TableSpec;
      reader.readMessage(value,proto.google.cloud.datacatalog.v1beta1.TableSpec.deserializeBinaryFromReader);
      msg.setTableSpec(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTableSourceType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getViewSpec();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.datacatalog.v1beta1.ViewSpec.serializeBinaryToWriter
    );
  }
  f = message.getTableSpec();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.cloud.datacatalog.v1beta1.TableSpec.serializeBinaryToWriter
    );
  }
};


/**
 * optional TableSourceType table_source_type = 1;
 * @return {!proto.google.cloud.datacatalog.v1beta1.TableSourceType}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.getTableSourceType = function() {
  return /** @type {!proto.google.cloud.datacatalog.v1beta1.TableSourceType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.cloud.datacatalog.v1beta1.TableSourceType} value */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.setTableSourceType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ViewSpec view_spec = 2;
 * @return {?proto.google.cloud.datacatalog.v1beta1.ViewSpec}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.getViewSpec = function() {
  return /** @type{?proto.google.cloud.datacatalog.v1beta1.ViewSpec} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.datacatalog.v1beta1.ViewSpec, 2));
};


/** @param {?proto.google.cloud.datacatalog.v1beta1.ViewSpec|undefined} value */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.setViewSpec = function(value) {
  jspb.Message.setOneofWrapperField(this, 2, proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.clearViewSpec = function() {
  this.setViewSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.hasViewSpec = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional TableSpec table_spec = 3;
 * @return {?proto.google.cloud.datacatalog.v1beta1.TableSpec}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.getTableSpec = function() {
  return /** @type{?proto.google.cloud.datacatalog.v1beta1.TableSpec} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.datacatalog.v1beta1.TableSpec, 3));
};


/** @param {?proto.google.cloud.datacatalog.v1beta1.TableSpec|undefined} value */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.setTableSpec = function(value) {
  jspb.Message.setOneofWrapperField(this, 3, proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.clearTableSpec = function() {
  this.setTableSpec(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryTableSpec.prototype.hasTableSpec = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.ViewSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.ViewSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewQuery: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ViewSpec}
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.ViewSpec;
  return proto.google.cloud.datacatalog.v1beta1.ViewSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ViewSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.ViewSpec}
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.ViewSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.ViewSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string view_query = 1;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.prototype.getViewQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.ViewSpec.prototype.setViewQuery = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.TableSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.TableSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupedEntry: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.TableSpec}
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.TableSpec;
  return proto.google.cloud.datacatalog.v1beta1.TableSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.TableSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.TableSpec}
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupedEntry(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.TableSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.TableSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupedEntry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string grouped_entry = 1;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.TableSpec.prototype.getGroupedEntry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.TableSpec.prototype.setGroupedEntry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataset: jspb.Message.getFieldWithDefault(msg, 1, ""),
    tablePrefix: jspb.Message.getFieldWithDefault(msg, 2, ""),
    shardCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec;
  return proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDataset(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTablePrefix(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setShardCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataset();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTablePrefix();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getShardCount();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional string dataset = 1;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.getDataset = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.setDataset = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string table_prefix = 2;
 * @return {string}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.getTablePrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.setTablePrefix = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 shard_count = 3;
 * @return {number}
 */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.getShardCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.google.cloud.datacatalog.v1beta1.BigQueryDateShardedSpec.prototype.setShardCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.google.cloud.datacatalog.v1beta1.TableSourceType = {
  TABLE_SOURCE_TYPE_UNSPECIFIED: 0,
  BIGQUERY_VIEW: 2,
  BIGQUERY_TABLE: 5
};

goog.object.extend(exports, proto.google.cloud.datacatalog.v1beta1);
