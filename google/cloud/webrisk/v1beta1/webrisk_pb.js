/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_api_client_pb = require('../../../../google/api/client_pb.js');
goog.object.extend(proto, google_api_client_pb);
var google_api_field_behavior_pb = require('../../../../google/api/field_behavior_pb.js');
goog.object.extend(proto, google_api_field_behavior_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.CompressionType', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.RawHashes', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.RawIndices', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.SearchHashesRequest', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.SearchHashesResponse', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.SearchUrisRequest', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.SearchUrisResponse', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals', null, global);
goog.exportSymbol('proto.google.cloud.webrisk.v1beta1.ThreatType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.displayName = 'proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.displayName = 'proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.displayName = 'proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.displayName = 'proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.SearchUrisRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.displayName = 'proto.google.cloud.webrisk.v1beta1.SearchUrisRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.SearchUrisResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.displayName = 'proto.google.cloud.webrisk.v1beta1.SearchUrisResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.displayName = 'proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.SearchHashesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.displayName = 'proto.google.cloud.webrisk.v1beta1.SearchHashesRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.SearchHashesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.displayName = 'proto.google.cloud.webrisk.v1beta1.SearchHashesResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.displayName = 'proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.displayName = 'proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.displayName = 'proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.RawIndices = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.google.cloud.webrisk.v1beta1.RawIndices.repeatedFields_, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.RawIndices, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.RawIndices.displayName = 'proto.google.cloud.webrisk.v1beta1.RawIndices';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.RawHashes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.RawHashes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.RawHashes.displayName = 'proto.google.cloud.webrisk.v1beta1.RawHashes';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.displayName = 'proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatType: jspb.Message.getFieldWithDefault(msg, 1, 0),
    versionToken: msg.getVersionToken_asB64(),
    constraints: (f = msg.getConstraints()) && proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest;
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.google.cloud.webrisk.v1beta1.ThreatType} */ (reader.readEnum());
      msg.setThreatType(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setVersionToken(value);
      break;
    case 3:
      var value = new proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.deserializeBinaryFromReader);
      msg.setConstraints(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreatType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getVersionToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getConstraints();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxDiffEntries: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxDatabaseEntries: jspb.Message.getFieldWithDefault(msg, 2, 0),
    supportedCompressionsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints;
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDiffEntries(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxDatabaseEntries(value);
      break;
    case 3:
      var value = /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.CompressionType>} */ (reader.readPackedEnum());
      msg.setSupportedCompressionsList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxDiffEntries();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxDatabaseEntries();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getSupportedCompressionsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
};


/**
 * optional int32 max_diff_entries = 1;
 * @return {number}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.getMaxDiffEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.setMaxDiffEntries = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 max_database_entries = 2;
 * @return {number}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.getMaxDatabaseEntries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.setMaxDatabaseEntries = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated CompressionType supported_compressions = 3;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.CompressionType>}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.getSupportedCompressionsList = function() {
  return /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.CompressionType>} */ (jspb.Message.getRepeatedField(this, 3));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.CompressionType>} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.setSupportedCompressionsList = function(value) {
  jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.CompressionType} value
 * @param {number=} opt_index
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.addSupportedCompressions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints.prototype.clearSupportedCompressionsList = function() {
  this.setSupportedCompressionsList([]);
};


/**
 * optional ThreatType threat_type = 1;
 * @return {!proto.google.cloud.webrisk.v1beta1.ThreatType}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.getThreatType = function() {
  return /** @type {!proto.google.cloud.webrisk.v1beta1.ThreatType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.google.cloud.webrisk.v1beta1.ThreatType} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.setThreatType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional bytes version_token = 2;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.getVersionToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes version_token = 2;
 * This is a type-conversion wrapper around `getVersionToken()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.getVersionToken_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getVersionToken()));
};


/**
 * optional bytes version_token = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getVersionToken()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.getVersionToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getVersionToken()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.setVersionToken = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional Constraints constraints = 3;
 * @return {?proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.getConstraints = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints, 3));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.Constraints|undefined} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.setConstraints = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.clearConstraints = function() {
  this.setConstraints(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffRequest.prototype.hasConstraints = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responseType: jspb.Message.getFieldWithDefault(msg, 4, 0),
    additions: (f = msg.getAdditions()) && proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.toObject(includeInstance, f),
    removals: (f = msg.getRemovals()) && proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.toObject(includeInstance, f),
    newVersionToken: msg.getNewVersionToken_asB64(),
    checksum: (f = msg.getChecksum()) && proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.toObject(includeInstance, f),
    recommendedNextDiff: (f = msg.getRecommendedNextDiff()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse;
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 4:
      var value = /** @type {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType} */ (reader.readEnum());
      msg.setResponseType(value);
      break;
    case 5:
      var value = new proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.deserializeBinaryFromReader);
      msg.setAdditions(value);
      break;
    case 6:
      var value = new proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.deserializeBinaryFromReader);
      msg.setRemovals(value);
      break;
    case 7:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setNewVersionToken(value);
      break;
    case 8:
      var value = new proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.deserializeBinaryFromReader);
      msg.setChecksum(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setRecommendedNextDiff(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponseType();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAdditions();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.serializeBinaryToWriter
    );
  }
  f = message.getRemovals();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.serializeBinaryToWriter
    );
  }
  f = message.getNewVersionToken_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      7,
      f
    );
  }
  f = message.getChecksum();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.serializeBinaryToWriter
    );
  }
  f = message.getRecommendedNextDiff();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType = {
  RESPONSE_TYPE_UNSPECIFIED: 0,
  DIFF: 1,
  RESET: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.toObject = function(includeInstance, msg) {
  var f, obj = {
    sha256: msg.getSha256_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum;
  return proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSha256(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSha256_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes sha256 = 1;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.prototype.getSha256 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes sha256 = 1;
 * This is a type-conversion wrapper around `getSha256()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.prototype.getSha256_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSha256()));
};


/**
 * optional bytes sha256 = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSha256()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.prototype.getSha256_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSha256()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum.prototype.setSha256 = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional ResponseType response_type = 4;
 * @return {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getResponseType = function() {
  return /** @type {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.ResponseType} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.setResponseType = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional ThreatEntryAdditions additions = 5;
 * @return {?proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getAdditions = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions, 5));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions|undefined} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.setAdditions = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.clearAdditions = function() {
  this.setAdditions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.hasAdditions = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional ThreatEntryRemovals removals = 6;
 * @return {?proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getRemovals = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals, 6));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals|undefined} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.setRemovals = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.clearRemovals = function() {
  this.setRemovals(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.hasRemovals = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional bytes new_version_token = 7;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getNewVersionToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * optional bytes new_version_token = 7;
 * This is a type-conversion wrapper around `getNewVersionToken()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getNewVersionToken_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getNewVersionToken()));
};


/**
 * optional bytes new_version_token = 7;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getNewVersionToken()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getNewVersionToken_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getNewVersionToken()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.setNewVersionToken = function(value) {
  jspb.Message.setProto3BytesField(this, 7, value);
};


/**
 * optional Checksum checksum = 8;
 * @return {?proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getChecksum = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum, 8));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.Checksum|undefined} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.setChecksum = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.clearChecksum = function() {
  this.setChecksum(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.hasChecksum = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp recommended_next_diff = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.getRecommendedNextDiff = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.setRecommendedNextDiff = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.clearRecommendedNextDiff = function() {
  this.setRecommendedNextDiff(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ComputeThreatListDiffResponse.prototype.hasRecommendedNextDiff = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    uri: jspb.Message.getFieldWithDefault(msg, 1, ""),
    threatTypesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchUrisRequest}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.SearchUrisRequest;
  return proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchUrisRequest}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUri(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (reader.readPackedEnum());
      msg.setThreatTypesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUri();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getThreatTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional string uri = 1;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.getUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.setUri = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated ThreatType threat_types = 2;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.getThreatTypesList = function() {
  return /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} value */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.setThreatTypesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatType} value
 * @param {number=} opt_index
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.addThreatTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisRequest.prototype.clearThreatTypesList = function() {
  this.setThreatTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    threat: (f = msg.getThreat()) && proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.SearchUrisResponse;
  return proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.deserializeBinaryFromReader);
      msg.setThreat(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreat();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    expireTime: (f = msg.getExpireTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri;
  return proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (reader.readPackedEnum());
      msg.setThreatTypesList(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpireTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreatTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getExpireTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreatType threat_types = 1;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.getThreatTypesList = function() {
  return /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} value */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.setThreatTypesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatType} value
 * @param {number=} opt_index
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.addThreatTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.clearThreatTypesList = function() {
  this.setThreatTypesList([]);
};


/**
 * optional google.protobuf.Timestamp expire_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.getExpireTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.setExpireTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.clearExpireTime = function() {
  this.setExpireTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri.prototype.hasExpireTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ThreatUri threat = 1;
 * @return {?proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.prototype.getThreat = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri, 1));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.ThreatUri|undefined} value */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.prototype.setThreat = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.prototype.clearThreat = function() {
  this.setThreat(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.SearchUrisResponse.prototype.hasThreat = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    hashPrefix: msg.getHashPrefix_asB64(),
    threatTypesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesRequest}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.SearchHashesRequest;
  return proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesRequest}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHashPrefix(value);
      break;
    case 2:
      var value = /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (reader.readPackedEnum());
      msg.setThreatTypesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHashPrefix_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getThreatTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      2,
      f
    );
  }
};


/**
 * optional bytes hash_prefix = 1;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.getHashPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes hash_prefix = 1;
 * This is a type-conversion wrapper around `getHashPrefix()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.getHashPrefix_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHashPrefix()));
};


/**
 * optional bytes hash_prefix = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHashPrefix()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.getHashPrefix_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHashPrefix()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.setHashPrefix = function(value) {
  jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * repeated ThreatType threat_types = 2;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.getThreatTypesList = function() {
  return /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.setThreatTypesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatType} value
 * @param {number=} opt_index
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.addThreatTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesRequest.prototype.clearThreatTypesList = function() {
  this.setThreatTypesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatsList: jspb.Message.toObjectList(msg.getThreatsList(),
    proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.toObject, includeInstance),
    negativeExpireTime: (f = msg.getNegativeExpireTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.SearchHashesResponse;
  return proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.deserializeBinaryFromReader);
      msg.addThreats(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setNegativeExpireTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.serializeBinaryToWriter
    );
  }
  f = message.getNegativeExpireTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.toObject = function(includeInstance, msg) {
  var f, obj = {
    threatTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    hash: msg.getHash_asB64(),
    expireTime: (f = msg.getExpireTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash;
  return proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (reader.readPackedEnum());
      msg.setThreatTypesList(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setHash(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setExpireTime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getThreatTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
  f = message.getHash_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getExpireTime();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ThreatType threat_types = 1;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.getThreatTypesList = function() {
  return /** @type {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.ThreatType>} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.setThreatTypesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatType} value
 * @param {number=} opt_index
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.addThreatTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.clearThreatTypesList = function() {
  this.setThreatTypesList([]);
};


/**
 * optional bytes hash = 2;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes hash = 2;
 * This is a type-conversion wrapper around `getHash()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.getHash_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getHash()));
};


/**
 * optional bytes hash = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getHash()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.getHash_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getHash()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.setHash = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp expire_time = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.getExpireTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.setExpireTime = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.clearExpireTime = function() {
  this.setExpireTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash.prototype.hasExpireTime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated ThreatHash threats = 1;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash>}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.getThreatsList = function() {
  return /** @type{!Array<!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash, 1));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash>} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.setThreatsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.addThreats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.clearThreatsList = function() {
  this.setThreatsList([]);
};


/**
 * optional google.protobuf.Timestamp negative_expire_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.getNegativeExpireTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.setNegativeExpireTime = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.clearNegativeExpireTime = function() {
  this.setNegativeExpireTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.SearchHashesResponse.prototype.hasNegativeExpireTime = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.toObject = function(includeInstance, msg) {
  var f, obj = {
    rawHashesList: jspb.Message.toObjectList(msg.getRawHashesList(),
    proto.google.cloud.webrisk.v1beta1.RawHashes.toObject, includeInstance),
    riceHashes: (f = msg.getRiceHashes()) && proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions;
  return proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.webrisk.v1beta1.RawHashes;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.RawHashes.deserializeBinaryFromReader);
      msg.addRawHashes(value);
      break;
    case 2:
      var value = new proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.deserializeBinaryFromReader);
      msg.setRiceHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRawHashesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.google.cloud.webrisk.v1beta1.RawHashes.serializeBinaryToWriter
    );
  }
  f = message.getRiceHashes();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.serializeBinaryToWriter
    );
  }
};


/**
 * repeated RawHashes raw_hashes = 1;
 * @return {!Array<!proto.google.cloud.webrisk.v1beta1.RawHashes>}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.getRawHashesList = function() {
  return /** @type{!Array<!proto.google.cloud.webrisk.v1beta1.RawHashes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.google.cloud.webrisk.v1beta1.RawHashes, 1));
};


/** @param {!Array<!proto.google.cloud.webrisk.v1beta1.RawHashes>} value */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.setRawHashesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.google.cloud.webrisk.v1beta1.RawHashes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.google.cloud.webrisk.v1beta1.RawHashes}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.addRawHashes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.google.cloud.webrisk.v1beta1.RawHashes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.clearRawHashesList = function() {
  this.setRawHashesList([]);
};


/**
 * optional RiceDeltaEncoding rice_hashes = 2;
 * @return {?proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.getRiceHashes = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding, 2));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding|undefined} value */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.setRiceHashes = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.clearRiceHashes = function() {
  this.setRiceHashes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryAdditions.prototype.hasRiceHashes = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.toObject = function(includeInstance, msg) {
  var f, obj = {
    rawIndices: (f = msg.getRawIndices()) && proto.google.cloud.webrisk.v1beta1.RawIndices.toObject(includeInstance, f),
    riceIndices: (f = msg.getRiceIndices()) && proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals;
  return proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.google.cloud.webrisk.v1beta1.RawIndices;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.RawIndices.deserializeBinaryFromReader);
      msg.setRawIndices(value);
      break;
    case 2:
      var value = new proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding;
      reader.readMessage(value,proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.deserializeBinaryFromReader);
      msg.setRiceIndices(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRawIndices();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.google.cloud.webrisk.v1beta1.RawIndices.serializeBinaryToWriter
    );
  }
  f = message.getRiceIndices();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.serializeBinaryToWriter
    );
  }
};


/**
 * optional RawIndices raw_indices = 1;
 * @return {?proto.google.cloud.webrisk.v1beta1.RawIndices}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.getRawIndices = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.RawIndices} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.RawIndices, 1));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.RawIndices|undefined} value */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.setRawIndices = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.clearRawIndices = function() {
  this.setRawIndices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.hasRawIndices = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RiceDeltaEncoding rice_indices = 2;
 * @return {?proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.getRiceIndices = function() {
  return /** @type{?proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding} */ (
    jspb.Message.getWrapperField(this, proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding, 2));
};


/** @param {?proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding|undefined} value */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.setRiceIndices = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.clearRiceIndices = function() {
  this.setRiceIndices(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.google.cloud.webrisk.v1beta1.ThreatEntryRemovals.prototype.hasRiceIndices = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.RawIndices.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.RawIndices} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.toObject = function(includeInstance, msg) {
  var f, obj = {
    indicesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.RawIndices}
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.RawIndices;
  return proto.google.cloud.webrisk.v1beta1.RawIndices.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.RawIndices} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.RawIndices}
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedInt32());
      msg.setIndicesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.RawIndices.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.RawIndices} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIndicesList();
  if (f.length > 0) {
    writer.writePackedInt32(
      1,
      f
    );
  }
};


/**
 * repeated int32 indices = 1;
 * @return {!Array<number>}
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.prototype.getIndicesList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<number>} value */
proto.google.cloud.webrisk.v1beta1.RawIndices.prototype.setIndicesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.prototype.addIndices = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.google.cloud.webrisk.v1beta1.RawIndices.prototype.clearIndicesList = function() {
  this.setIndicesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.RawHashes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.RawHashes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.toObject = function(includeInstance, msg) {
  var f, obj = {
    prefixSize: jspb.Message.getFieldWithDefault(msg, 1, 0),
    rawHashes: msg.getRawHashes_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.RawHashes}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.RawHashes;
  return proto.google.cloud.webrisk.v1beta1.RawHashes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.RawHashes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.RawHashes}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPrefixSize(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRawHashes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.RawHashes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.RawHashes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPrefixSize();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getRawHashes_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
};


/**
 * optional int32 prefix_size = 1;
 * @return {number}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.getPrefixSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.setPrefixSize = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bytes raw_hashes = 2;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.getRawHashes = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes raw_hashes = 2;
 * This is a type-conversion wrapper around `getRawHashes()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.getRawHashes_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRawHashes()));
};


/**
 * optional bytes raw_hashes = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRawHashes()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.getRawHashes_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRawHashes()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.RawHashes.prototype.setRawHashes = function(value) {
  jspb.Message.setProto3BytesField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.toObject = function(opt_includeInstance) {
  return proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstValue: jspb.Message.getFieldWithDefault(msg, 1, 0),
    riceParameter: jspb.Message.getFieldWithDefault(msg, 2, 0),
    entryCount: jspb.Message.getFieldWithDefault(msg, 3, 0),
    encodedData: msg.getEncodedData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding;
  return proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFirstValue(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRiceParameter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setEntryCount(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEncodedData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstValue();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getRiceParameter();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getEntryCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getEncodedData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional int64 first_value = 1;
 * @return {number}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.getFirstValue = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.setFirstValue = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 rice_parameter = 2;
 * @return {number}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.getRiceParameter = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.setRiceParameter = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 entry_count = 3;
 * @return {number}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.getEntryCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.setEntryCount = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional bytes encoded_data = 4;
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.getEncodedData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes encoded_data = 4;
 * This is a type-conversion wrapper around `getEncodedData()`
 * @return {string}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.getEncodedData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEncodedData()));
};


/**
 * optional bytes encoded_data = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEncodedData()`
 * @return {!Uint8Array}
 */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.getEncodedData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEncodedData()));
};


/** @param {!(string|Uint8Array)} value */
proto.google.cloud.webrisk.v1beta1.RiceDeltaEncoding.prototype.setEncodedData = function(value) {
  jspb.Message.setProto3BytesField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.google.cloud.webrisk.v1beta1.ThreatType = {
  THREAT_TYPE_UNSPECIFIED: 0,
  MALWARE: 1,
  SOCIAL_ENGINEERING: 2,
  UNWANTED_SOFTWARE: 3
};

/**
 * @enum {number}
 */
proto.google.cloud.webrisk.v1beta1.CompressionType = {
  COMPRESSION_TYPE_UNSPECIFIED: 0,
  RAW: 1,
  RICE: 2
};

goog.object.extend(exports, proto.google.cloud.webrisk.v1beta1);
