/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var common_health_pb = require('../common/health_pb.js');
goog.object.extend(proto, common_health_pb);
var characters_characters_model_pb = require('../characters/characters_model_pb.js');
goog.object.extend(proto, characters_characters_model_pb);
goog.exportSymbol('proto.mruv.DeathStreamRequest', null, global);
goog.exportSymbol('proto.mruv.DeathStreamResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mruv.DeathStreamRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mruv.DeathStreamRequest.repeatedFields_, null);
};
goog.inherits(proto.mruv.DeathStreamRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mruv.DeathStreamRequest.displayName = 'proto.mruv.DeathStreamRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mruv.DeathStreamResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mruv.DeathStreamResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mruv.DeathStreamResponse.displayName = 'proto.mruv.DeathStreamResponse';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mruv.DeathStreamRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mruv.DeathStreamRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mruv.DeathStreamRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mruv.DeathStreamRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mruv.DeathStreamRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    deathTypesList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mruv.DeathStreamRequest}
 */
proto.mruv.DeathStreamRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mruv.DeathStreamRequest;
  return proto.mruv.DeathStreamRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mruv.DeathStreamRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mruv.DeathStreamRequest}
 */
proto.mruv.DeathStreamRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<!proto.mruv.DeathType>} */ (reader.readPackedEnum());
      msg.setDeathTypesList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mruv.DeathStreamRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mruv.DeathStreamRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mruv.DeathStreamRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mruv.DeathStreamRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeathTypesList();
  if (f.length > 0) {
    writer.writePackedEnum(
      1,
      f
    );
  }
};


/**
 * repeated DeathType death_types = 1;
 * @return {!Array<!proto.mruv.DeathType>}
 */
proto.mruv.DeathStreamRequest.prototype.getDeathTypesList = function() {
  return /** @type {!Array<!proto.mruv.DeathType>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<!proto.mruv.DeathType>} value */
proto.mruv.DeathStreamRequest.prototype.setDeathTypesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!proto.mruv.DeathType} value
 * @param {number=} opt_index
 */
proto.mruv.DeathStreamRequest.prototype.addDeathTypes = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.mruv.DeathStreamRequest.prototype.clearDeathTypesList = function() {
  this.setDeathTypesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mruv.DeathStreamResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mruv.DeathStreamResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mruv.DeathStreamResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mruv.DeathStreamResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    character: (f = msg.getCharacter()) && characters_characters_model_pb.Character.toObject(includeInstance, f),
    deathType: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mruv.DeathStreamResponse}
 */
proto.mruv.DeathStreamResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mruv.DeathStreamResponse;
  return proto.mruv.DeathStreamResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mruv.DeathStreamResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mruv.DeathStreamResponse}
 */
proto.mruv.DeathStreamResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new characters_characters_model_pb.Character;
      reader.readMessage(value,characters_characters_model_pb.Character.deserializeBinaryFromReader);
      msg.setCharacter(value);
      break;
    case 2:
      var value = /** @type {!proto.mruv.DeathType} */ (reader.readEnum());
      msg.setDeathType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mruv.DeathStreamResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mruv.DeathStreamResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mruv.DeathStreamResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mruv.DeathStreamResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCharacter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      characters_characters_model_pb.Character.serializeBinaryToWriter
    );
  }
  f = message.getDeathType();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional Character character = 1;
 * @return {?proto.mruv.Character}
 */
proto.mruv.DeathStreamResponse.prototype.getCharacter = function() {
  return /** @type{?proto.mruv.Character} */ (
    jspb.Message.getWrapperField(this, characters_characters_model_pb.Character, 1));
};


/** @param {?proto.mruv.Character|undefined} value */
proto.mruv.DeathStreamResponse.prototype.setCharacter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.mruv.DeathStreamResponse.prototype.clearCharacter = function() {
  this.setCharacter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mruv.DeathStreamResponse.prototype.hasCharacter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional DeathType death_type = 2;
 * @return {!proto.mruv.DeathType}
 */
proto.mruv.DeathStreamResponse.prototype.getDeathType = function() {
  return /** @type {!proto.mruv.DeathType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.mruv.DeathType} value */
proto.mruv.DeathStreamResponse.prototype.setDeathType = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


goog.object.extend(exports, proto.mruv);
